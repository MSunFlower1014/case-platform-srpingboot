package com.ma.vue.boot.base;

/**
 * GC的目的：
 * 分配空间
 * 确保需要的对象使用的空间还在
 * 释放不在使用的对象的使用空间
 *
 * GC Roots 有哪些：
 *
 * 当前各线程执行方法中的局部变量（包括形参）引用的对象
 * 已被加载的类的 static 域引用的对象
 * 方法区中常量引用的对象
 * JNI 引用
 *
 * G1 的很重要的目标是达到可控的停顿时间，所以很多的行为都以这个目标为出发点开展的。
 * 我们通过设置 -XX:MaxGCPauseMillis=N 来指定停顿时间（单位 ms，默认 200ms），如果没有达到这个目标，
 * G1 会通过各种方式来补救：调整年轻代和老年代的比例，调整堆大小，调整晋升的年龄阈值，调整混合垃圾回收周期中处理的老年代的区块数量等等。
 *
 * G1 的主要关注点在于达到可控的停顿时间，在这个基础上尽可能提高吞吐量，这一点非常重要。
 * G1 被设计用来长期取代 CMS 收集器，和 CMS 相同的地方在于，它们都属于并发收集器，在大部分的收集阶段都不需要挂起应用程序。
 * 区别在于，G1 没有 CMS 的碎片化问题（或者说不那么严重），同时提供了更加可控的停顿时间。
 */
public class GcNotes {
}
